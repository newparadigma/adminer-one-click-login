name: test

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."

      - name: List files in the repository
        run: ls ${{ github.workspace }}

      - name: Start Docker Compose services
        run: docker-compose up -d

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install puppeteer

      - name: Install Chrome
        run: sudo apt-get install -y google-chrome-stable

      - name: Run Puppeteer script
        uses: actions/github-script@v7
        with:
            script: |
                const puppeteer = require('puppeteer');

                (async () => {
                  const browser = await puppeteer.launch({
                    executablePath: '/usr/bin/google-chrome',
                    args: ['--no-sandbox', '--disable-setuid-sandbox'],
                  });
                  const page = await browser.newPage();
                  await page.goto('http://localhost:81');
                  
                  const content = await page.content();
                  if (!content.includes('adminer')) {
                    throw new Error('The text "adminer" was not found on the page');
                  }

                  if (!content.includes('mongo')) {
                    throw new Error('The text "mongo" was not found on the page');
                  }

                  // –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É "Enter"
                  await page.click('input[type="submit"][value="Enter"]');

                  // –ñ–¥–µ–º, –ø–æ–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
                  await page.waitForTimeout(2000); // –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã

                  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ "Database: local"
                  const h2Text = await page.evaluate(() => {
                    const h2 = document.querySelector('h2');
                    return h2 ? h2.textContent : null;
                  });

                  if (h2Text !== 'Database: local') {
                    throw new Error('The text "Database: local" was not found in the h2 tag');
                  }

                  console.log('Successfully found "Database: local" in h2 tag');

                  await browser.close();
                })();

      - run: echo "üçè This job's status is ${{ job.status }}."